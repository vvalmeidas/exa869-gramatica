"Name" = 'Expressions'
"Author" = 'Manuella Vieira'
"About" = 'Gramática para reconhecimento de expressões relacionais, lógicas e aritméticas'


"Start Symbol" = <Expression>
              

Identifier =  {Letter} ({AlphaNumeric} | '_')*
FloatNumber = {Digit}+('.'{Digit}+)+
IntegerNumber = {Digit}+
RelationalOperator = ('>' | '<' | '<=' | '>=' | '==' | '!=')

<Expression> ::= <And Exp> <A>

<A> ::= '||' <Expression>
        | <> 
            
<And Exp> ::= <Rel Exp> <B>   

<B> ::= '&&' <And Exp>
        | <> 

<Rel Exp>::= <Add Exp> <C>
            
<C> ::= RelationalOperator <Rel Exp> 
        | <>

<Add Exp> ::= <Mult Exp> <D>

<D> ::= '+' <Add Exp> 
        | '-' <Add Exp>
        | <>

<Mult Exp> ::= <Neg Exp> <E>

<E> ::= '*' <Mult Exp> 
        | '/' <Mult Exp>
        | <>

<Neg Exp>  ::= '-' <F>
               |  <Exp Value> <G>
               | '!' <H><Exp Value>
               | '++' <Exp Value>
                       
<F> ::= '-' <Exp Value> 
        | <Exp Value>

<G> ::= '--' 
     | '++' 
     | <>

<H> ::= '!'<H> | <> ! Permite mais de um '!' seguidos
     
<Exp Value> ::= Identifier <Array>
            | FloatNumber
            | IntegerNumber
            |  '(' <Expression> ')'

<Array> ::= '['<Index>']'<Matrix> | <>

<Index> ::= Identifier 
         | IntegerNumber
         
<Matrix> ::= '['<Index>']'
            | <>
